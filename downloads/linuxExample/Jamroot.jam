#Create a variable for the project root that can be used in other jamfiles

.os = [ modules.peek : OS ] ;
.platform = [ modules.peek : OSPLAT ] ;

import modules os ;

modules.poke : BOOST_BUILD_PATH : [ modules.peek : BOOST_BUILD_PATH ] "./pwiz_libraries" ;
constant BOOST_VERSION : 1.43.0 ;
#Temporary hack to get tar.jam to work
#patch tar.jam
#SHELL "patch -N pwiz_libraries/tar.jam < patch.tar.jam" ; 

if [ os.on-windows ]
{
	using tar : bsdtar.exe ;
}
else
{
	using tar ;
}


import tar ;

path-constant BOOST_SOURCE : "./pwiz_libraries/boost_1_43_0" ;
using ext-boost : 1_43_0 : $(BOOST_SOURCE) ;


# extract zlib tarball
tar.extract "./pwiz_libraries/zlib-1.2.3.tar.bz2" : : <location>pwiz_libraries : : check-last-file-only ;

local pwiz_src_tarball = [ SORT [ glob pwiz-src*.tar.bz2 ] ] ;
pwiz_src_tarball = "$(pwiz_src_tarball[-1])" ; # take the last (latest) tarball

#extract only certain paths from the pwiz tarball
tar.extract
	# tar filepath
 	$(pwiz_src_tarball)
 	: # include patterns
 	quickbuild.* clean.*
 	Jamroot.jam
 	LICENSE NOTICE
 	pwiz
 	pwiz_aux/msrc
 	pwiz_aux/Jamfile.jam
 	pwiz_tools/common
 
 	: # requirements
 	<location>pwiz_src
 	: # usage-requirements
 	: check-last-file-only	
;

#define some default paramters for this project, these can be overriden on the command line
project : default-build 
	release
	<link>static
	<runtime-link>static
;

#build the pwiz_example executable, and "install" it into ./bin
install install-bin : project_src//pwiz_example : <location>./bin ;
