<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>ProteoWizard:msData API</title>

<link href="css/pwiz_structure.css" rel="stylesheet" type="text/css">
<link href="css/pwiz_styles.css" rel="stylesheet" type="text/css">

<script src="SpryAssets/SpryMenuBar.js" type="text/javascript"></script>
<link href="SpryAssets/SpryMenuBarHorizontal.css" rel="stylesheet" type="text/css" />
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-54926454-1', 'auto');
  ga('send', 'pageview');

</script></head>

<body>

<div class="container">

  
<!--#include virtual="nav.html" -->

    <div class="content">
    
    <!-- Content goes here. -->


    <h1>ProteoWizard Data Access Layer Design</h1>
    <hr/>

    <p>
    The ProteoWizard data access layer library is <code>pwiz/msdata</code>, and the 
    interface and data structure definitions are in <code>MSData.hpp</code>.
    </p>

    <p>
    The data model is a one-to-one translation from mzML data elements to C++ structs.
    The root <code>mzML</code> element correspondes to an <code>MSData</code> struct, 
    and the sub-elements correspond to structs with similar names.  
    <code>SpectrumList</code> has a virtual interface, which allows for lazy evaluation
    backed by a data file.
    </p>
    
    <p>
    The <code>mzML</code> controlled vocabulary (CV) is parsed at compile time, generating
    <code>cv.hpp</code> and <code>cv.cpp</code>.  This allows CV terms to be used in 
    a typesafe manner, and also makes the various CV relations and synonyms available
    to C++ client code.
    </p>

    <p>
    Mapping from the various structs to mzML is done in the <code>IO</code> module, and
    diff calculations in <code>Diff</code>.  <code>Serializer_mzML</code> and 
    <code>Serializer_mzXML</code> allow serializations to/from iostreams in mzML and mzXML
    formats, respectively.
    </p>

    <p>
    <code>MSDataFile</code> is a subclass of <code>MSData</code> that adds file I/O handling. 
    <code>MSDataFile::Reader</code> provides a generic interface for file readers.  By default,
    <code>Reader</code>s for mzML, mzXML, and Thermo RAW files are provided.  On instantiation
    with a filename, <code>MSDataFile</code> finds a <code>Reader</code> that will accept the 
    file, and uses that <code>Reader</code> to fill in the internal data structures.
    </p>

    <hr/>

    <!-- End of Content  -->

    
    <!-- end .content -->
</div>
	<div id="sourceforge">
        <a href="http://sourceforge.net/projects/proteowizard"><img src="http://sflogo.sourceforge.net/sflogo.php?group_id=216483&type=11" width="120" height="30" border="0" alt="Get ProteoWizard at SourceForge.net. Fast, secure and Free Open Source software downloads" /></a>
	</div>

    
    
  <!-- end .container --></div>
<script type="text/javascript">
var MenuBar1 = new Spry.Widget.MenuBar("MenuBar1", {imgDown:"SpryAssets/SpryMenuBarDownHover.gif", imgRight:"SpryAssets/SpryMenuBarRightHover.gif"});
</script>
</body>
</html>
